{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.BASE_URL = \"http://localhost:8080/login/\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  get usuarioLogado() {\n    let usu = localStorage[this.LS_CHAVE];\n    return usu ? JSON.parse(localStorage[this.LS_CHAVE]) : null;\n  }\n  set usuarioLogado(usuario) {\n    localStorage[this.LS_CHAVE] = JSON.stringify(usuario);\n  }\n  logout() {\n    delete localStorage[this.LS_CHAVE];\n  }\n  login(login) {\n    return this.httpClient.post(this.BASE_URL, login, this.httpOptions);\n  }\n}\n_class = LoginService;\n_class.ɵfac = function LoginService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","LoginService","constructor","httpClient","BASE_URL","httpOptions","headers","usuarioLogado","usu","localStorage","LS_CHAVE","JSON","parse","usuario","stringify","logout","login","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/requisitos/Acacia/pessoais/estudos/raizer-angular/crud-trabalhoentregar/src/app/auth/services/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Usuario, Login } from 'src/app/shared';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class LoginService {\n  BASE_URL = \"http://localhost:8080/login/\";\n  httpOptions = {\n  headers: new HttpHeaders({\n  'Content-Type': 'application/json'\n  })\n  };\n  constructor(private httpClient: HttpClient) { }\n\n\n  public get usuarioLogado(): Usuario {\n    let usu = localStorage[this.LS_CHAVE];\n    return (usu ? JSON.parse(localStorage[this.LS_CHAVE]) : null);\n    }\n    public set usuarioLogado(usuario: Usuario) {\n    localStorage[this.LS_CHAVE] = JSON.stringify(usuario);\n    }\n    logout() {\n    delete localStorage[this.LS_CHAVE];\n    }\n\n    login(login: Login): Observable<Usuario | null> {\n      return this.httpClient.post<Usuario>(this.BASE_URL,\n        login,\n        this.httpOptions);\n\n    \n      }\n\n    }"],"mappings":";AAIA,SAASA,WAAW,QAAQ,sBAAsB;;;AAOlD,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAN9B,KAAAC,QAAQ,GAAG,8BAA8B;IACzC,KAAAC,WAAW,GAAG;MACdC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACzB,cAAc,EAAE;OACf;KACA;EAC6C;EAG9C,IAAWO,aAAaA,CAAA;IACtB,IAAIC,GAAG,GAAGC,YAAY,CAAC,IAAI,CAACC,QAAQ,CAAC;IACrC,OAAQF,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC,GAAG,IAAI;EAC5D;EACA,IAAWH,aAAaA,CAACM,OAAgB;IACzCJ,YAAY,CAAC,IAAI,CAACC,QAAQ,CAAC,GAAGC,IAAI,CAACG,SAAS,CAACD,OAAO,CAAC;EACrD;EACAE,MAAMA,CAAA;IACN,OAAON,YAAY,CAAC,IAAI,CAACC,QAAQ,CAAC;EAClC;EAEAM,KAAKA,CAACA,KAAY;IAChB,OAAO,IAAI,CAACb,UAAU,CAACc,IAAI,CAAU,IAAI,CAACb,QAAQ,EAChDY,KAAK,EACL,IAAI,CAACX,WAAW,CAAC;EAGnB;;SA3BOJ,YAAY;;mBAAZA,MAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZpB,MAAY;EAAAqB,OAAA,EAAZrB,MAAY,CAAAsB,IAAA;EAAAC,UAAA,EAJX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}